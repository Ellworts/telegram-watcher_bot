const { Telegraf } = require("telegraf");
const admin = require("firebase-admin");
const axios = require("axios");
const { BOT_TOKEN, FIREBASE_CREDENTIALS_PATH, OPENAI_API_KEY } = require("./config");
const path = require("path");

const serviceAccount = require('./telebot-watcher-firebase-adminsdk-fbsvc-780d9431be.json');

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

const bot = new Telegraf(BOT_TOKEN);

const allowedUserId = 753599659;

async function getChatGptResponse(prompt) {
    try {
        const response = await axios.post(
            'https://api.openai.com/v1/chat/completions',
            {
                model: "gpt-3.5-turbo",
                messages: [{ role: "user", content: prompt }],
                max_tokens: 150,
                temperature: 0.7,
            },
            {
                headers: {
                    'Authorization': `Bearer ${OPENAI_API_KEY}`,
                    'Content-Type': 'application/json'
                }
            }
        );
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç ChatGPT
        const message = response.data.choices[0].message.content.trim();
        return message;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç ChatGPT:", error);
        return null;
    }
}

bot.on("text", async (ctx) => {
    const userId = ctx.from.id;
    const messageText = ctx.message.text;

    if (userId === allowedUserId) {

  const prompt = `Translate my text from Russian to English, separating them into two parts with '///' as the delimiter. The Russian text should come first, followed by a line break and then the English translation. Follow this example: Example: Russian text\n\n /// \n\nEnglish text. Do it with that text: ${messageText}`;
        


        const processedMessage = await getChatGptResponse(prompt);

        if (processedMessage) {

            const channelId = '@mxrgtm';


            bot.telegram.sendMessage(channelId, processedMessage)
                .then((sentMessage) => {
                    console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª`);


                    const cleanChannelId = channelId.replace('@', '');


                    const postData = {
                        post_id: sentMessage.message_id,
                        telegram_channel: cleanChannelId,
                        message_id: sentMessage.message_id,
                        timestamp: admin.firestore.FieldValue.serverTimestamp(),
                    };

                    const script = `
                        <script async src="https://telegram.org/js/telegram-widget.js?7"
                                data-telegram-post="${cleanChannelId}/${sentMessage.message_id}"
                                data-width="100%"
                                data-dark="1"></script>
                    `;

                    postData.script = script;

                    const postRef = db.collection("telegramPosts").doc(sentMessage.message_id.toString());

                    postRef.set(postData)
                        .then(() => {
                            console.log(`‚úÖ –ü–æ—Å—Ç ${sentMessage.message_id} —Å–æ—Ö—Ä–∞–Ω—ë–Ω —Å –∫–æ–¥–æ–º –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ Firebase`);
                        })
                        .catch((err) => {
                            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ Firebase:", err);
                        });
                })
                .catch((err) => {
                    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª:", err);
                });
        } else {
            console.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ ChatGPT");
        }
    } else {
        console.log(`üö´ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${userId} –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è`);
    }
});

bot.on("channel_post", (ctx) => {
    const post = ctx.channelPost;
    const postId = post.message_id;
    const channelUsername = post.chat.username;


    const cleanChannelUsername = channelUsername.replace('@', '');

    const postData = {
        post_id: postId,
        telegram_channel: cleanChannelUsername,
        message_id: postId,
    };

    const script = `
        <script async src="https://telegram.org/js/telegram-widget.js?7"
                data-telegram-post="${cleanChannelUsername}/${postId}"
                data-width="100%"
                data-dark="1"></script>
    `;

    postData.script = script;

    const postRef = db.collection("telegramPosts").doc(postId.toString());

    postRef.set(postData)
        .then(() => {
            console.log(`‚úÖ –ü–æ—Å—Ç ${postId} —Å–æ—Ö—Ä–∞–Ω—ë–Ω —Å –∫–æ–¥–æ–º –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ Firebase`);
        })
        .catch((err) => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ Firebase:", err);
        });
});

bot.launch();
console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");
